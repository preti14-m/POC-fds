name: Deploy Sample .NET Core to Azure VM (Windows IIS)

env:
  DOTNET_VERSION: '6.0.x'
  PROJECT_PATH: 'SampleDotNetApp/SampleDotNetApp/SampleDotNetApp.csproj'
  SOLUTION_PATH: 'SampleDotNetApp/SampleDotNetApp.sln'
  TARGET_RID: 'win-x64'
  IIS_SITE_NAME: 'SampleDotNetAppSite'
  IIS_SITE_PATH: 'C:\\inetpub\\wwwroot\\SampleDotNetApp'

on:
  push:
    branches:
      - main

permissions:
  contents: read
  actions: read

jobs:
  build-test-publish:
    name: Build and Publish .NET App
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Restore .NET Dependencies
        run: dotnet restore ${{ env.SOLUTION_PATH }}

      - name: Build .NET Application
        run: dotnet build ${{ env.SOLUTION_PATH }} --configuration Release --no-restore

      - name: Publish .NET Application
        run: |
          dotnet publish ${{ env.PROJECT_PATH }} \
            --configuration Release \
            --runtime ${{ env.TARGET_RID }} \
            --self-contained true \
            --output ./publish_output

      - name: Upload Published Application Artifact
        uses: actions/upload-artifact@v4
        with:
          name: dotnet-app-publish
          path: ./publish_output
          retention-days: 1

  deploy-to-iis-vm:
    name: Deploy to Azure Windows VM with IIS
    runs-on: ubuntu-latest
    needs: build-test-publish

    steps:
      - name: Download Published Application Artifact
        uses: actions/download-artifact@v4
        with:
          name: dotnet-app-publish
          path: ./downloaded_app

      - name: Setup SSH for PowerShell
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Deploy via SCP and PowerShell to IIS
        run: |
          echo "Copying application to Windows VM..."
          scp -r -o StrictHostKeyChecking=no ./downloaded_app/* ${{ secrets.VM_USER }}@${{ secrets.VM_HOST }}:"C:/temp/deployment/"

          echo "Running deployment commands on remote Windows VM..."
          ssh -o StrictHostKeyChecking=no ${{ secrets.VM_USER }}@${{ secrets.VM_HOST }} powershell -Command "
            Import-Module WebAdministration;
            if (Test-Path '${{ env.IIS_SITE_PATH }}') {
              Stop-WebSite -Name '${{ env.IIS_SITE_NAME }}';
              Remove-Item '${{ env.IIS_SITE_PATH }}\\*' -Recurse -Force;
              Copy-Item 'C:\\temp\\deployment\\*' -Destination '${{ env.IIS_SITE_PATH }}' -Recurse;
              Start-WebSite -Name '${{ env.IIS_SITE_NAME }}';
            } else {
              Write-Host 'IIS site path does not exist.';
              exit 1;
            }
          "
